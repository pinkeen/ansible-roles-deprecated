---
- name: Create user
  user:
    state: present
    name: "{{ seafile_user }}"
    home: "{{ seafile_home }}"
    group: "nginx"
    move_home: yes

- name: Create  dbs
  mysql_db: 
    name: "{{ item }}" 
    state: present 
    collation: utf8_general_ci
    encoding: utf8
  with_items: "{{ seafile_db_names }}"

- name: Create db user
  mysql_user: 
    name: "{{ seafile_user }}" 
    password: "{{ seafile_db_pass }}" 
    priv: "{{ item }}.*:ALL" 
    host: localhost
    state: present
    append_privs: yes
  with_items: "{{ seafile_db_names }}"    

- name: Install dependencies
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - python
    - python-setuptools
    - MySQL-python
    - python-pillow
    - python-flup

- name: Download tarball
  get_url:
    url: "{{ seafile_tarball }}"
    dest: "{{ seafile_home }}/seafile-server-{{ seafile_version }}.tar.gz"
  sudo: yes
  sudo_user: "{{ seafile_user }}"    

- name: Unpack seafile
  unarchive:
    src: "{{ seafile_home }}/seafile-server-{{ seafile_version }}.tar.gz"
    dest: "{{ seafile_home }}"
    creates: "{{ seafile_install_dir }}"
    copy: no
  sudo: yes
  sudo_user: "{{ seafile_user }}"

- name: Link latest version
  file:
    src: "{{ seafile_install_dir }}"
    dest: "{{ seafile_latest_dir }}"
    state: link
  sudo: yes
  sudo_user: "{{ seafile_user }}"

- name: Initialize seafile database
  shell: > 
    /bin/mysql "{{ seafile_seahub_db_name }}" -u"{{ seafile_user }}" -p"{{ seafile_db_pass }}" < "{{ seafile_seahub_db_sql }}" && echo "do not remove" > "{{ seafile_home }}/seahub_schema_created.lock"
  args:
    creates: "{{ seafile_home }}/seahub_schema_created.lock"

- include: config.yml

- name: Copy default avatars
  shell: >
    mv "{{ seafile_orig_avatar_dir }}" "{{ seafile_dest_avatar_dir }}"
  args:
    creates: "{{ seafile_default_avatar }}"
  sudo: yes
  sudo_user: "{{ seafile_user }}"      

- name: Symlink avatar dir
  file:
    src: "{{ seafile_dest_avatar_dir }}"
    dest: "{{ seafile_orig_avatar_dir }}"
    state: link
    force: yes
  sudo: yes
  sudo_user: "{{ seafile_user }}"  

- name: Create library template dir
  file:
    dest: "{{ seafile_lib_template_dir }}"
    state: directory
  sudo: yes
  sudo_user: "{{ seafile_user }}"   

- name: Install logrotate config
  template:
    src: logrotate.conf
    dest: "/etc/logrotate.d/{{ seafile_user }}"     

- name: Install create user script    
  template:
    src: create_admin_user.py
    dest: "{{ seafile_home }}/create_admin_user.py"
    mode: 0744
  sudo: yes
  sudo_user: "{{ seafile_user }}"    

- name: Install service files
  template: 
    src: "{{ item }}"
    dest: "/etc/systemd/system/{{ item }}"
  with_items:
    - seafile.service
    - seahub.service
  notify: 
    - Reload systemd service files
    - Restart seafile and seahub

- name: Start and enable seafile
  service: name=seafile state=started enabled=yes

- name: Create admin user
  shell: >
    {{ seafile_python_path }} /bin/python {{ seafile_home }}/create_admin_user.py
    {{ seafile_admin_email }}
    {{ seafile_admin_password }}
  args:
    creates: "{{ seafile_home }}/seahub_admin_created.lock"
  sudo: yes
  sudo_user: "{{ seafile_user }}"     

- name: Start and enable seahub
  service: name=seahub state=started enabled=yes

- include: nginx.yml


